<?xml version="1.0"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<organization>
		<name>Revere Intelligence, Inc.</name>
		<url>http://revere.ai</url>
	</organization>

	<groupId>ai.revere.monitor</groupId>
	<artifactId>revere-monitor</artifactId>
	<version>1.9.3</version>
	<packaging>war</packaging>
	<name>Revere Monitor</name>

	<repositories>
		<repository>
			<id>redshift</id>
			<url>http://redshift-maven-repository.s3-website-us-east-1.amazonaws.com/release</url>
		</repository>
	</repositories>

	<!-- Updated for Wildfly 10 -->

	<properties>
		<!--
			Explicitly declaring the source encoding eliminates the following message:
			[WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent!
		-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JBoss dependency versions -->
        <version.wildfly.maven.plugin>1.0.2.Final</version.wildfly.maven.plugin>
        <version.jboss.spec.javaee.7.0>1.0.3.Final</version.jboss.spec.javaee.7.0>

        <!-- other plugin versions -->
        <version.compiler.plugin>3.5.1</version.compiler.plugin>
        <version.war.plugin>2.1.1</version.war.plugin>

        <!-- maven-compiler-plugin -->
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
	</properties>

    <dependencyManagement>
        <dependencies>
            <!-- Define the version of JBoss' Java EE 7 APIs we want to use -->
            <!-- JBoss distributes a complete set of Java EE 7 APIs including
                a Bill of Materials (BOM). A BOM specifies the versions of a "stack" (or
                a collection) of artifacts. We use this here so that we always get the correct
                versions of artifacts. Here we use the jboss-javaee-7.0 stack (you can
                read this as the JBoss stack of the Java EE 7 APIs). You can actually
                use this stack with any version of WildFly that implements Java EE 7, not
                just WildFly 8! -->
            <dependency>
                <groupId>org.jboss.spec</groupId>
                <artifactId>jboss-javaee-7.0</artifactId>
                <version>${version.jboss.spec.javaee.7.0}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

 			<!-- AWS SDK -->
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-bom</artifactId>
				<version>1.11.155</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
       </dependencies>
    </dependencyManagement>

	<dependencies>
        <!-- Import the CDI API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jdbc</artifactId>
			<version>9.0.10</version>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.2</version>
		</dependency>

		<dependency>
			<groupId>com.google.cloud</groupId>
			<artifactId>google-cloud-bigquery</artifactId>
			<version>1.35.0</version>
		</dependency>





		<!-- Import the Common Annotations API (JSR-250), we use provided scope
            as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Servlet API, we use provided scope as the API is included in JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included
            in WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <version>1.0.0.Final</version>
            <scope>provided</scope>
        </dependency>



		<!-- Import the JPA API, we use provided scope as the API is included in
            JBoss WildFly -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.1-api</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- Import the EJB API, we use provided scope as the API is included in
            JBoss WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>



        <!--  Provides access to UserTransaction, we use provided scope as the API is included in
            WildFly -->
        <dependency>
            <groupId>org.jboss.spec.javax.transaction</groupId>
            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>

		<!-- Add ability to rewrite URLs in web.xml -->
		<dependency>
			<groupId>org.tuckey</groupId>
			<artifactId>urlrewritefilter</artifactId>
			<version>4.0.3</version>
		</dependency>

		<!-- JSON conversion utility -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.5</version>
		</dependency>

		<!-- Mail -->
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.4</version>
		</dependency>

		<!-- XSS prevention utility -->
		<dependency>
			<groupId>org.owasp.encoder</groupId>
			<artifactId>encoder</artifactId>
			<version>1.1.1</version>
		</dependency>

		<!-- HTML parser with JQuery-like selectors -->
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.8.3</version>
		</dependency>

		<!-- Segment analytics -->
		<dependency>
			<groupId>com.segment.analytics.java</groupId>
			<artifactId>analytics</artifactId>
			<version>LATEST</version>
		</dependency>

		<!-- FB Ads API -->
		<dependency>
			<groupId>com.facebook.ads.sdk</groupId>
			<artifactId>facebook-java-ads-sdk</artifactId>
			<version>2.11.0</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.microsoft.bingads/microsoft.bingads -->
		<dependency>
			<groupId>com.microsoft.bingads</groupId>
			<artifactId>microsoft.bingads</artifactId>
			<version>11.5.5</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20170516</version>
		</dependency>


		<!-- Google AdWords API -->
		<dependency>
			<groupId>com.google.api-ads</groupId>
			<artifactId>ads-lib</artifactId>
			<version>3.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.api-ads</groupId>
			<artifactId>adwords-axis</artifactId>
			<version>3.12.0</version>
		</dependency>

		<!-- Google Analytics API -->
		<dependency>
    		<groupId>com.google.apis</groupId>
    		<artifactId>google-api-services-analytics</artifactId>
			<version>v3-rev146-1.22.0</version>
		</dependency>
		<dependency>
    		<groupId>com.google.api-client</groupId>
    		<artifactId>google-api-client-gson</artifactId>
    		<version>1.22.0</version>
		</dependency>

		<!-- CSV import / export utility -->
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>3.9</version>
		</dependency>

                <!-- Apache HTTP client -->
                <dependency>
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>httpclient</artifactId>
                        <version>4.5.3</version>
                </dependency>

		<!-- AWS S3 -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk-s3</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.16</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
			<version>2.1.3</version>
		</dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.9</version>
        </dependency>

		<!-- Queue dependency-->

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk</artifactId>
            <version>1.11.313</version>
        </dependency>

        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>amazon-sqs-java-messaging-lib</artifactId>
            <version>1.0.4</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>javax.jms</groupId>
            <artifactId>javax.jms-api</artifactId>
            <version>2.0.1</version>
        </dependency>

		<dependency>
			<groupId>com.amazon.redshift</groupId>
			<artifactId>redshift-jdbc41-no-awssdk</artifactId>
			<version>1.2.10.1009</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.11.0</version>
			<scope>test</scope>
		</dependency>


		<!--<dependency>-->
			<!--<groupId>com.fasterxml.jackson.core</groupId>-->
			<!--<artifactId>jackson-annotations</artifactId>-->
			<!--<version>2.8.7</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>com.fasterxml.jackson.core</groupId>-->
			<!--<artifactId>jackson-core</artifactId>-->
			<!--<version>2.8.7</version>-->
		<!--</dependency>-->



		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<!-- 
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20170516</version>
		</dependency>
		-->

	</dependencies>

	<build>
		<!-- Set the name of the war, used as the context root when the app is deployed -->
		<finalName>${project.artifactId}</finalName>
		<plugins>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>${version.war.plugin}</version>
                <configuration>
                    <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- WildFly plugin to deploy war -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <version>${version.wildfly.maven.plugin}</version>
            </plugin>

            <!-- Compiler plugin enforces Java 1.6 compatibility and activates
                annotation processors -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.compiler.plugin}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgument>-Xlint:unchecked</compilerArgument>
                </configuration>
            </plugin>

			<!-- Javadoc plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<additionalparam>-Xdoclint:none</additionalparam>
				</configuration>
			</plugin>

			<!-- JSdoc plugin -->
			<plugin>
				<groupId>com.phasebash.jsdoc</groupId>
				<artifactId>jsdoc3-maven-plugin</artifactId>
				<version>1.1.0</version>
				<configuration>
					<recursive>true</recursive>
					<directoryRoots>
						<directoryRoot>${basedir}/src/main/webapp/js</directoryRoot>
					</directoryRoots>
				</configuration>
			</plugin>
			
			<!-- Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files -->
			<!--
			<plugin>
		    	<groupId>org.apache.maven.plugins</groupId>
    			<artifactId>maven-enforcer-plugin</artifactId>
    			<version>1.1.1</version>
    				<executions>
        				<execution>
            				<id>enforce</id>
            				<configuration>
								<rules>
                    				<evaluateBeanshell>
                        				<condition>javax.crypto.Cipher.getMaxAllowedKeyLength("AES") > 128</condition>
                    				</evaluateBeanshell>
                				</rules>
            				</configuration>
            			<goals>
                			<goal>enforce</goal>
            			</goals>
        			</execution>
    			</executions>
			</plugin>
			-->
		</plugins>

		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
				  <include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<distributionManagement>
		<site>
			<id>static-files</id>
			<url>file:///var/www/html/</url>
		</site>
	</distributionManagement>
</project>
